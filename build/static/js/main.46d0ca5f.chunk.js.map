{"version":3,"sources":["LdaSvg.tsx","textbox.tsx","Selector.tsx","EmotionBar.tsx","Cloud.tsx","Distribution.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Source","Textbox","props","state","content","stair","id","this","style","width","color","fontSize","Component","Selector","options","value","marginLeft","marginTop","map","item","index","key","LdaSvg","colortap","fx","fy","data","groups","source","length","xmin","x","xmax","ymin","y","ymax","forEach","d","updateScale","transform","height","xmlns","className","cx","cy","Math","sqrt","r","fill","onClick","$","animate","setTimeout","textAnchor","dy","stack","_r","parseInt","substring","toString","_g","_b","opacity","stroke","strokeWidth","onMouseOver","onMouseMove","onMouseOut","getJSON","set","push","setState","市教育局","EmotionBar","rx","ry","CloudRefresh","loadCloud","filedata","Cloud","words","maxvalue","sort","a","b","position","top","size","text","_x","random","_y","pow","keydown","event","which","box","max","min","topic","_use","word","i","Distribution","step","distributions","line","import","changeSelect","year","topic_amount","axios","get","市建委","headers","then","JSON","parse","reason","console","warn","catch","run","App","onChange","type","padding","left","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46d0ca5f.chunk.js","sourcesContent":["/*\r\n * @Author: Antoine YANG \r\n * @Date: 2019-09-10 10:38:37 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2019-09-12 13:50:37\r\n */\r\nimport React, { Component } from 'react';\r\nimport './bootstrap.css';\r\nimport './style.css';\r\nimport $ from 'jquery';\r\n\r\nexport enum Source {\r\n    市教育局, 市建委\r\n}\r\n\r\nexport interface LdaSvgProps {}\r\n\r\nexport interface LdaSvgState {\r\n    data: Array<{ x: number, y: number, stack: number }>;\r\n    groups: number;\r\n    source: Source | null;\r\n}\r\n\r\nclass LdaSvg extends Component<LdaSvgProps, LdaSvgState, any> {\r\n    private colortap: Array<string> = [\"#FFB6C1\", \"#DC143C\", \"#A0522D\", \"#FF1493\", \"#FF00FF\", \"#800080\", \"#4B0082\",\r\n        \"#7B68EE\", \"#0000FF\", \"#000080\", \"#6495ED\", \"#778899\", \"#00BFFF\", \"#B0E0E6\", \"#00FFFF\", \"#2F4F4F\", \"#00FA9A\",\r\n        \"#006400\", \"#FFFF00\", \"#FF8C00\"];\r\n\r\n    public constructor(props: LdaSvgProps) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            groups: 20,\r\n            source: null\r\n        };\r\n    }\r\n\r\n    private fx: (data: number) => number\r\n        = () => {\r\n            return 40;\r\n        }\r\n\r\n    private fy: (data: number) => number\r\n        = () => {\r\n            return 0;\r\n        }\r\n\r\n    private updateScale(): void {\r\n        if (this.state.data.length === 0) {\r\n            return;\r\n        }\r\n        let xmin: number = this.state.data[0].x;\r\n        let xmax: number = this.state.data[0].x;\r\n        let ymin: number = this.state.data[0].y;\r\n        let ymax: number = this.state.data[0].y;\r\n        this.state.data.forEach(d => {\r\n            if (d.x < xmin) {\r\n                xmin = d.x;\r\n            }\r\n            if (d.x > xmax) {\r\n                xmax = d.x;\r\n            }\r\n            if (d.y < ymin) {\r\n                ymin = d.y;\r\n            }\r\n            if (d.y > ymax) {\r\n                ymax = d.y;\r\n            }\r\n        });\r\n        this.fx = (data: number) => (data * 0.8 - xmin) / (xmax - xmin) * 1206 + 40;\r\n        this.fy = (data: number) => (data * 0.9 - ymin) / (ymax - ymin) * 450;\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        this.updateScale();\r\n        return (\r\n            <svg width={1256} transform={'translate(0, 6)'} height={450} id={'tsne'} xmlns={`http://www.w3.org/2000/svg`}>\r\n                {\r\n                    this.colortap.map((item, index) => {\r\n                        return (\r\n                            index >= this.state.groups\r\n                                ? <g key={`lda_g_${index}`}></g>\r\n                                : <g key={`lda_g_${index}`}>\r\n                                    <circle\r\n                                        key={`lda_icon_${index}`}\r\n                                        xmlns={`http://www.w3.org/2000/svg`}\r\n                                        id={`lda_icon_${index}`} className={`lda_stack_icon`}\r\n                                        cx={30} cy={(21 * Math.sqrt(20 / this.state.groups)) * index + 24}\r\n                                        r={8 * Math.sqrt(20 / this.state.groups)}\r\n                                        style={{\r\n                                            fill: item\r\n                                        }}\r\n                                        onClick={() => {\r\n                                            $(`.lda_stack_${index}`).animate({\r\n                                                r: 15\r\n                                            }, 200, () => {\r\n                                                setTimeout(() => {\r\n                                                    $(`.lda_stack_${index}`).animate({\r\n                                                        r: 6\r\n                                                    }, 600, void 0)\r\n                                                }, 200);\r\n                                            });\r\n                                            // TODO: a.js Line 4978\r\n                                        }}\r\n                                    />\r\n                                    <text\r\n                                        key={`lda_label_${index}`}\r\n                                        xmlns={`http://www.w3.org/2000/svg`}\r\n                                        id={`lda_icon_${index}`} className={`lda_stack_label`}\r\n                                        x={44} y={(21 * Math.sqrt(20 / this.state.groups)) * index + 24}\r\n                                        textAnchor={'start'} dy={'0.4em'}\r\n                                        style={{\r\n                                            fontSize: 13 * Math.sqrt(20 / this.state.groups),\r\n                                            fill: 'dark'\r\n                                        }}\r\n                                    >\r\n                                        {`主题 ${ index + 1 }`}\r\n                                    </text>\r\n                                </g>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    this.state.data.map((item, index) => {\r\n                        let color: string = this.colortap[item.stack % this.colortap.length];\r\n                        let _r: string = (0x100 - parseInt(color.substring(1, 3), 16)).toString(16);\r\n                        let _g: string = (0x100 - parseInt(color.substring(3, 5), 16)).toString(16);\r\n                        let _b: string = (0x100 - parseInt(color.substring(5, 7), 16)).toString(16);\r\n                        return (\r\n                            <circle\r\n                                key={`lda_point_${index}`}\r\n                                xmlns={`http://www.w3.org/2000/svg`}\r\n                                id={`lda_point_${index}`} className={`lda_stack_${item.stack}`}\r\n                                cx={this.fx(item.x)} cy={this.fy(item.y)} r={6}\r\n                                style={{\r\n                                    opacity: 0.6,\r\n                                    fill: color,\r\n                                    stroke: `#${_r}${_g}${_b}99`,\r\n                                    strokeWidth: 1\r\n                                }}\r\n                                onMouseOver={() => {\r\n                                    // d3.select(this).attr(\"r\", 10).attr(\"opacity\", \"0.8\");\r\n                                    // tooltip.html(d[2]);\r\n                                    // tooltip.style(\"visibility\", \"visible\");\r\n                                }}\r\n                                onMouseMove={() => {\r\n                                    // tooltip.style('top', (parseInt(d3.event.pageY) - 10) + 'px')\r\n                                    //      .style('left', (parseInt(d3.event.pageX) + 10) + 'px');\r\n                                }}\r\n                                onMouseOut={() => {\r\n                                    // d3.select(this)\r\n                                    //     .transition()\r\n                                    //     .duration(500)\r\n                                    //     .attr(\"r\", 6)\r\n                                    //     .attr(\"opacity\", \"0.6\");\r\n                                    // tooltip.style(\"visibility\", \"hidden\");\r\n                                }}\r\n                                onClick={() => {\r\n                                    // var id = d[2].substring(2);\r\n                                    // if (m == 1) {\r\n                                    //     cloud(sjyjMAX, id, sjyjCloud);\r\n                                    //     show(sjyjd, id);\r\n                                    //     show2(0, id);\r\n                                    //     emotion(sjyje, id);\r\n                                    // } else if (m == 2) {\r\n                                    //     cloud(sjwMAX, id, sjwCloud);\r\n                                    //     show(sjwd, id);\r\n                                    //     show2(0, id);\r\n                                    //     emotion(sjwe, id);\r\n                                    // }\r\n                                }}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </svg>\r\n        );\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        $.getJSON('./data/2018sjyjk.json', (data: Array< {\"0\": number, \"1\": number, \"k\": number} >) => {\r\n            let set: Array<{ x: number, y: number, stack: number }> = [];\r\n            data.forEach(d => {\r\n                set.push({\r\n                    x: d[\"0\"],\r\n                    y: d[\"1\"],\r\n                    stack: d[\"k\"]\r\n                });\r\n            });\r\n            this.setState({\r\n                data: set,\r\n                groups: 20,\r\n                source: Source.市教育局\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default LdaSvg;\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2019-09-10 10:38:51 \r\n * @Last Modified by:   Antoine YANG \r\n * @Last Modified time: 2019-09-10 10:38:51 \r\n */\r\nimport React, { Component } from 'react';\r\nimport './bootstrap.css';\r\nimport './style.css';\r\n\r\nexport interface TextboxProps {\r\n    id: string\r\n}\r\n\r\nexport interface TextboxState {\r\n    content: string;\r\n    stair: string;\r\n}\r\n\r\nclass Textbox extends Component<TextboxProps, TextboxState, any> {\r\n    public constructor(props: TextboxProps) {\r\n        super(props);\r\n        this.state = {\r\n            content: 'undefined',\r\n            stair: 'undefined'\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div id={this.props.id} style={{width: '100%'}}>\r\n                <p style={{color: 'steelblue', fontSize: '24px'}}>意见：{this.state.content}</p>\r\n                <br />\r\n                <p style={{color: 'steelblue', fontSize: '24px'}}>社会层面：{this.state.stair}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Textbox;\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2019-09-10 10:38:43 \r\n * @Last Modified by:   Antoine YANG \r\n * @Last Modified time: 2019-09-10 10:38:43 \r\n */\r\nimport React, { Component } from 'react';\r\nimport './bootstrap.css';\r\nimport './style.css';\r\n\r\nexport interface SelectorProps {\r\n    id: string;\r\n    marginTop: string | number;\r\n}\r\n\r\nexport interface SelectorState {\r\n    options: Array<{ value: string | number, content: string }>;\r\n}\r\n\r\nclass Selector extends Component<SelectorProps, SelectorState, any> {\r\n    public constructor(props: SelectorProps) {\r\n        super(props);\r\n        this.state = {\r\n            options: [{ value: \"\", content: \"选择编号\" }]\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <select id={this.props.id} style={{width: '50px', marginLeft: '10px', marginTop: this.props.marginTop}}>\r\n                {this.state.options.map((item, index) => {\r\n                    return (\r\n                        <option value={item.value} key={index}>{item.content}</option>\r\n                    );\r\n                })}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Selector;\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2019-09-10 10:38:05 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2019-09-10 11:37:05\r\n */\r\nimport React, { Component } from 'react';\r\nimport './bootstrap.css';\r\nimport './style.css';\r\n\r\nexport interface EmotionBarProps {}\r\n\r\nexport interface EmotionBarState {\r\n    data: number | null\r\n}\r\n\r\nclass EmotionBar extends Component<EmotionBarProps, EmotionBarState, any> {\r\n    public constructor(props: EmotionBarProps) {\r\n        super(props);\r\n        this.state = {\r\n            data: null\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        if (this.state.data) {\r\n            return (\r\n                <svg width={1259} transform={'translate(0, 6)'} height={90} id={'centrebar'} xmlns={`http://www.w3.org/2000/svg`}>\r\n                    <rect\r\n                        xmlns={`http://www.w3.org/2000/svg`}\r\n                        x={59} y={32} rx={10} ry={10} width={1159} height={18}\r\n                        style={{\r\n                            fill: '#ccc',\r\n                            stroke: 'black'\r\n                        }}\r\n                    />\r\n                    <rect\r\n                        xmlns={`http://www.w3.org/2000/svg`}\r\n                        x={59} y={32} rx={10} ry={10} width={1159 * this.state.data} height={18}\r\n                        style={{\r\n                            fill: this.state.data <= 0.35 ? 'red'\r\n                                    : this.state.data <= 0.65 ? 'yellow'\r\n                                        : 'steelblue',\r\n                            stroke: 'none'\r\n                        }}\r\n                    />\r\n                    <text\r\n                        xmlns={`http://www.w3.org/2000/svg`}\r\n                        x={1159 * this.state.data + 57} y={ 20 }\r\n                        textAnchor={'middle'}\r\n                        style={{\r\n                            fill: 'black',\r\n                            fontSize: 13\r\n                        }}\r\n                        >\r\n                        { this.state.data }\r\n                    </text>\r\n                </svg>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <svg width={1259} transform={'translate(0, 6)'} height={90} id={'centrebar'} xmlns={`http://www.w3.org/2000/svg`}>\r\n                    <rect\r\n                        xmlns={`http://www.w3.org/2000/svg`}\r\n                        x={59} y={32} rx={10} ry={10} width={1159} height={18}\r\n                        style={{\r\n                            fill: '#ccc',\r\n                            stroke: 'black'\r\n                        }}\r\n                    />\r\n                </svg>\r\n            );\r\n        }\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        this.setState({\r\n            data: 0.8\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default EmotionBar;\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2019-09-10 10:38:02 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2019-09-12 14:05:30\r\n */\r\nimport React, { Component } from 'react';\r\nimport './bootstrap.css';\r\nimport './style.css';\r\nimport $ from 'jquery';\r\nimport { ldaData } from './Distribution';\r\n\r\nexport interface CloudProps {}\r\n\r\nexport interface CloudState {\r\n    words: Array<{text: string, value: number}>\r\n}\r\n\r\nexport var CloudRefresh: () => void = () => void 0;\r\n\r\nexport var loadCloud: (filedata: ldaData) => void = (filedata: ldaData) => void 0;\r\n\r\n\r\nclass Cloud extends Component<CloudProps, CloudState, any> {\r\n    private colortap: Array<string> = [\"#FFB6C1\", \"#DC143C\", \"#A0522D\", \"#FF1493\", \"#FF00FF\", \"#800080\", \"#4B0082\",\r\n        \"#7B68EE\", \"#0000FF\", \"#000080\", \"#6495ED\", \"#778899\", \"#00BFFF\", \"#B0E0E6\", \"#00FFFF\", \"#2F4F4F\", \"#00FA9A\",\r\n        \"#006400\", \"#FFFF00\", \"#FF8C00\"];\r\n\r\n    public constructor(props: CloudProps) {\r\n        super(props);\r\n        this.state = { words: [] };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        let maxvalue: number = 0;\r\n        this.state.words.forEach(d => {\r\n            if (d.value > maxvalue) {\r\n                maxvalue = d.value;\r\n            }\r\n        });\r\n        let words: Array<{text: string, value: number}> = this.state.words;\r\n        words.sort((a, b) => {\r\n            return a.value - b.value;\r\n        });\r\n        return (\r\n            <svg width={420} height={230} id={'wordcloud'} xmlns={`http://www.w3.org/2000/svg`}\r\n            style={{position: 'relative', top: '-20px'}}>\r\n                {\r\n                    words.map((item, index) => {\r\n                        let size: number = item.value / maxvalue * 16 + 20;\r\n                        let width: number = 408 - size * item.text.length * 1.1;\r\n                        let height: number = 218 - size * 1.3;\r\n                        let _x: number = Math.random() * width + size * item.text.length * 0.55 + 6;\r\n                        let _y: number = Math.random() * height + size * 0.65 + 6;\r\n                        if (index !== 0 && Math.sqrt(Math.pow(_x - 210, 2) + Math.pow(_y - 115, 2)) < Math.sqrt(index) * 10) {\r\n                            _x = _x < 210 ? _x - index * 100 : _x + index * 100;\r\n                            _y = _y < 115 ? _y - index * 24 : _y + index * 24;\r\n                        }\r\n                        return (\r\n                            <text key={index} className={'cloud_word'}\r\n                                xmlns={`http://www.w3.org/2000/svg`}\r\n                                x={ _x } y={ _y }\r\n                                textAnchor={'middle'}\r\n                                style={{\r\n                                    fill: this.colortap[index % 20],\r\n                                    fontSize: size\r\n                                }}\r\n                                >\r\n                                { item.text }\r\n                            </text>\r\n                        )\r\n                    })\r\n                }\r\n            </svg>\r\n        );\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        $('*').keydown(function(event){\r\n            if (event.which === 82) {\r\n                CloudRefresh();\r\n            }\r\n        });\r\n        CloudRefresh = () => {\r\n            this.setState({\r\n                words: this.state.words\r\n            });\r\n        };\r\n        loadCloud = (filedata: ldaData) => {\r\n            let data: Array<{topic: number, words: Array<{word: string, value: number}>}> = filedata['topics'];\r\n            let box: Array<{word: string, value: number}> = [];\r\n            let max: number = 0;\r\n            let min: number = 1;\r\n            data.forEach(topic => {\r\n                let _use: {word: string, value: number} | null = null;\r\n                topic.words.forEach(word => {\r\n                    if (!_use || (word.value > _use!.value && word.word.length > 1)) {\r\n                        _use = word;\r\n                    }\r\n                });\r\n                box.push(_use ? _use : {word: \"?\", value: 0});\r\n            });\r\n            box.forEach(d => {\r\n                if (d.value > max) {\r\n                    max = d.value;\r\n                }\r\n                if (d.value < min) {\r\n                    min = d.value;\r\n                }\r\n            });\r\n            for (let i: number = 0; i < box.length; i++) {\r\n                box[i] = {word: box[i].word, value: (box[i].value - min) / (max - min)};\r\n            };\r\n        };\r\n        this.setState({\r\n            words: [\r\n                { text: '关键词', value: 1024 },\r\n                { text: '内容', value: 628 },\r\n                { text: '主题', value: 800 },\r\n                { text: '热词', value: 750 },\r\n                { text: '干扰词', value: 500 },\r\n                { text: '常用字', value: 800 },\r\n                { text: '专有名词', value: 470 },\r\n                { text: '细节', value: 10 },\r\n                { text: '值得关注的内容', value: 640 },\r\n                { text: '某个经常出现的字符串', value: 440 }\r\n            ]\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default Cloud;\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2019-09-10 13:36:37 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2019-09-10 16:39:26\r\n */\r\nimport React, { Component } from 'react';\r\nimport './bootstrap.css';\r\nimport './style.css';\r\nimport $ from 'jquery';\r\n\r\n\r\nexport interface ldaData {\r\n    topics: Array<{topic: number, words: Array<{word: string, value: number}>}>;\r\n    distributions: Array< Array<{stack: number, value: number}> >;\r\n}\r\n\r\nexport interface DistributionProps {}\r\n\r\nexport interface DistributionState {\r\n    data: Array<number>;\r\n}\r\n\r\nclass Distribution extends Component<DistributionProps, DistributionState, any> {\r\n    private colortap: Array<string> = [\"#FFB6C1\", \"#DC143C\", \"#A0522D\", \"#FF1493\", \"#FF00FF\", \"#800080\", \"#4B0082\",\r\n        \"#7B68EE\", \"#0000FF\", \"#000080\", \"#6495ED\", \"#778899\", \"#00BFFF\", \"#B0E0E6\", \"#00FFFF\", \"#2F4F4F\", \"#00FA9A\",\r\n        \"#006400\", \"#FFFF00\", \"#FF8C00\"];\r\n\r\n    public constructor(props: DistributionProps) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        let step: number = 380 / this.state.data.length;\r\n        return (\r\n            <svg width={420} height={230} id={'distribution'} xmlns={`http://www.w3.org/2000/svg`}>\r\n                {\r\n                    this.state.data.map((item, index) => {\r\n                        return (\r\n                            <rect xmlns={`http://www.w3.org/2000/svg`} key={`topic_distri_${index}`}\r\n                                x = { 20 + index * step + 0.18 * step } y = { 186 - item * 160 }\r\n                                width = { step * 0.64 } height = { item * 160 }\r\n                                style = {{\r\n                                    fill: this.colortap[index % 20],\r\n                                    stroke: 'black'\r\n                                }}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    this.state.data.map((item, index) => {\r\n                        return (\r\n                            <text xmlns={`http://www.w3.org/2000/svg`} key={`topic_distri_label_${index}`}\r\n                                x = { 20 + index * step + 0.52 * step } y = { 203 }\r\n                                textAnchor = { 'middle' }\r\n                                style = {{\r\n                                    fill: 'black',\r\n                                    fontSize: Math.sqrt(step * 36) / 3.4\r\n                                }}\r\n                            >\r\n                                { `主题${ index + 1 }` }\r\n                            </text>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    this.state.data.map((item, index) => {\r\n                        return (\r\n                            <text xmlns={`http://www.w3.org/2000/svg`} key={`topic_distri_value_${index}`}\r\n                                x = { 20 + index * step + 0.52 * step } y = { 180 - item * 160 }\r\n                                textAnchor = { 'middle' }\r\n                                style = {{\r\n                                    fill: 'black',\r\n                                    fontSize: Math.sqrt(step * 36) / 3.6\r\n                                }}\r\n                            >\r\n                                { `${ parseInt((item * 10000).toString()) / 100 }%` }\r\n                            </text>\r\n                        )\r\n                    })\r\n                }\r\n            </svg>\r\n        );\r\n    }\r\n\r\n    public import(filedata: ldaData): void {\r\n        let data: Array<number> = [];\r\n        let groups: number = filedata.distributions[0].length;\r\n        for (let i: number = 0; i < groups; i++) {\r\n            data.push(0);\r\n        }\r\n        filedata.distributions.forEach(line => {\r\n            line.forEach(d => {\r\n                data[d.stack] += d.value;\r\n            });\r\n        });\r\n        for (let i: number = 0; i < data.length; i++) {\r\n            data[i] /= filedata.distributions.length;\r\n        }\r\n        this.setState({\r\n            data: data\r\n        });\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        $.getJSON('data/lda$5$2018@sjyj.json', (data: ldaData) => {\r\n            this.import(data);\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport default Distribution;\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2019-09-10 10:38:15 \r\n * @Last Modified by: Antoine YANG\r\n * @Last Modified time: 2019-09-12 13:58:22\r\n */\r\nimport React, { ChangeEvent } from 'react';\r\nimport './bootstrap.css';\r\nimport './style.css';\r\nimport Textbox from './textbox';\r\nimport Selector from './Selector';\r\nimport LdaSvg, { Source } from './LdaSvg';\r\nimport EmotionBar from './EmotionBar';\r\nimport Cloud, {CloudRefresh, loadCloud} from './Cloud';\r\nimport Distribution from './Distribution';\r\nimport axios, { AxiosResponse } from 'axios';\r\n\r\n\r\nlet changeSelect: (event: ChangeEvent<HTMLSelectElement>) => void\r\n    = event => {};\r\n\r\nexport var run: (year: number, source: Source, topic_amount: number) => Promise<void>\r\n    = async (year: number, source: Source, topic_amount: number) => {\r\n        await axios.get(`/run/${year}/${source === Source.市建委 ? 'sjw' : 'sjyj'}/${topic_amount}`, {\r\n                    headers: 'Content-type:text/html;charset=utf-8'\r\n                })\r\n                .then((value: AxiosResponse<any>) => {\r\n                    loadCloud(JSON.parse(value.data));\r\n                }, (reason: any) => {\r\n                    console.warn(reason);\r\n                })\r\n                .catch((reason: any) => {\r\n                    console.warn(reason);\r\n                });\r\n    };\r\n\r\nrun(2018, Source.市建委, 5);\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div id=\"left\">\r\n          <div id=\"dataselect\">\r\n              <div className=\"panell-heading\">\r\n                  dataselect\r\n              </div>\r\n              <div >\r\n                  <h1 style={{fontSize: '18px', marginLeft: '9px'}}>\r\n                      相关建议的LDA结果与情感分析\r\n                  </h1>\r\n              </div>\r\n              <div>\r\n                  <select id=\"Year\" style={{width: '50px', marginLeft: '10px', marginTop: '0px'}}>\r\n                          <option value=\"0\">选择数据</option>\r\n                          <option value=\"1\" id=\"year2016\">2016</option>\r\n                          <option value=\"2\" id=\"year2017\">2017</option>\r\n                          <option value=\"3\" id=\"year2018\">2018</option>\r\n                  </select>\r\n                  <select id=\"project\" onChange={changeSelect} style={{width: '50px', marginLeft: '10px', marginTop: '0px'}}>\r\n                      <option value=\"0\">选择数据</option>\r\n                      <option value=\"1\" id=\"1\">市教育局</option>\r\n                      <option value=\"2\" id=\"2\">市建委</option>\r\n                  </select>\r\n                  <Selector id=\"area\" marginTop='0px' />\r\n                  <Selector id=\"cs\" marginTop='10px' />\r\n                  <br />\r\n                    &nbsp;&nbsp;&nbsp;Topic:<input className=\"endTime\" type=\"text\" id='etime'\r\n                      style={{marginLeft: '9px', width: '100px', marginTop: '5px'}} />\r\n                  <input type=\"button\" value=\"TEST\" id='btn' style={{width: '75px'}} />\r\n              </div>\r\n\r\n              <div id=\"sent\"></div>\r\n          </div>\r\n          <div id=\"select\">\r\n              <div className=\"panell-heading\">\r\n                  Opinion1\r\n              </div>\r\n              <Textbox id='cloud'/>\r\n          </div>\r\n          <div id=\"text\">\r\n              <div className=\"panell-heading\">\r\n                  Opinion2\r\n              </div>\r\n              <Textbox id='cloud2'/>\r\n          </div>\r\n      </div>\r\n\r\n      <div id=\"LDA\">\r\n          <div className=\"panell-heading\">\r\n              LDA\r\n              <LdaSvg />\r\n          </div>\r\n      </div>\r\n      <div id=\"emotion1\">\r\n          <div className=\"panell-heading\">\r\n              Emotion\r\n          </div>\r\n          <div id=\"Emo1\" style={{height: '90px', width: '1259px'}}>\r\n              <EmotionBar />\r\n          </div>\r\n      </div>\r\n      <div id=\"topic\">\r\n          <div className=\"panell-heading\">\r\n              KeyWordCloud\r\n          </div>\r\n          <div id=\"cloud1\" style={{height: '230px', width: '420px'}}>\r\n              <button type=\"button\" style={{position: 'relative', padding: '0px 5px', top: '-27px', left: '386px'}}\r\n                    onClick={event => {CloudRefresh()}}>\r\n                R\r\n              </button>\r\n              <Cloud />\r\n          </div>\r\n      </div>\r\n      <div id=\"emotion\">\r\n          <div className=\"panell-heading\">\r\n              All\r\n          </div>\r\n          <div id=\"Emo\" style={{height: '230px', width: '420px'}}>\r\n              <Distribution />\r\n          </div>\r\n      </div>\r\n      <div id=\"extra\">\r\n        <div className=\"panell-heading\">\r\n            Extra\r\n        </div>\r\n        <div id=\"extraDiv\" style={{height: '230px', width: '420px'}}></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/*\r\n * @Author: Antoine YANG \r\n * @Date: 2019-09-10 10:38:31 \r\n * @Last Modified by:   Antoine YANG \r\n * @Last Modified time: 2019-09-10 10:38:31 \r\n */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}